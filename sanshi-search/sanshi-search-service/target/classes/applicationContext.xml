<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:component-scan base-package="com.sanshi.search" />
	<!-- 加载数据源文件 -->
	<context:property-placeholder location="classpath:resource/*.properties" />
	<!--配置数据库链接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 可以不要配置，可以自动识别 -->
		<!-- <property name="driverClassName" value="${jdbc.driver}" /> -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="maxActive" value="100" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
	</bean>

	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 加载mybatis-config配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 加载mapper.xml文件 如果在dao的pom加入配置可以不用配置了 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
	</bean>
	<!--配置接口扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sanshi.search.mapper"></property>
	</bean>

	<bean id="httpSolrClient" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
		<!--<constructor-arg index="0" value="${solr.baseUrl}"/> -->
		<constructor-arg index="0"
			value="http://118.89.43.25:8081/solr/mycore" />
		<!-- 设置响应解析器 -->
		<property name="parser">
			<bean class="org.apache.solr.client.solrj.impl.XMLResponseParser" />
		</property>
	</bean>

	<!--引入消息队列配置 -->
	<import resource="activity-config.xml"/>

	<!-- ======================= 配置dubbo服务提供 ======================================= -->
	<!-- 服务者名字 -->
	<dubbo:application name="sanshi-search-provider" />
	<!-- 注册仓库地址：zookeeper组件，118.89.43.25:2181 -->
	<dubbo:registry address="zookeeper://118.89.43.25:2181" />
	<!-- 用dubbo协议在20881端口暴露服务 ，主要20880在上个服务已经使用要更改端口 -->
	<dubbo:protocol name="dubbo" port="20882" />
	<!-- 声明暴露接口的服务 ref:接口的实现与@Service("***")里面的名字一样 -->
	<dubbo:service interface="com.sanshi.search.service.SolrItemService"
		ref="solrItemServiceImpl" timeout="30000" />
	<dubbo:service interface="com.sanshi.search.service.SearchService"
		ref="searchServiceImpl" timeout="3000" />

</beans>
